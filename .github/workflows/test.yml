name: CI/CD for EProject Microservices

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Clean up Docker environment (avoid port conflicts)
        run: |
          docker ps -aq | xargs -r docker stop
          docker ps -aq | xargs -r docker rm
          docker network prune -f
          docker volume prune -f

      - name: Create .env files for all services
        run: |
          echo "MONGODB_AUTH_URI=mongodb://mongo:27017/auth_db" > auth/.env
          echo "JWT_SECRET=idontknow" >> auth/.env
          
          echo "MONGODB_PRODUCT_URI=mongodb://mongo:27017/product_db" > product/.env
          echo "RABBITMQ_URL=amqp://rabbitmq:5672" >> product/.env

          echo "MONGODB_ORDER_URI=mongodb://mongo:27017/order_db" > order/.env
          echo "RABBITMQ_URL=amqp://rabbitmq:5672" >> order/.env

      - name: Install dependencies
        run: |
          cd auth && npm ci && cd ..
          cd product && npm ci && cd ..
          cd order && npm ci && cd ..
          cd api-gateway && npm ci && cd ..

      - name: Start Docker Compose (build & run)
        run: docker compose up -d --build

      - name: Wait for services to start
        run: sleep 30

      - name: Run Auth tests
        run: |
        - name: Install & Test (auth)
  working-directory: ./auth
  env: { NODE_ENV: test }
  run: |
          npm ci
          npm install --save-dev mocha chai chai-http
          cd auth
          npm test

      - name: Run Product tests
        run: |
          cd product
          npm test

      - name: Run Order tests
        run: |
          cd order
          npm test

      - name: Stop Docker Compose (cleanup)
        if: always()
        run: docker compose down --remove-orphans -v
