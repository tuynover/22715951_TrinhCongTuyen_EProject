name: CI/CD for EProject Microservices

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:6
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ping:1})'" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

      rabbitmq:
        image: rabbitmq:3.8-management-alpine
        ports:
          - 5672:5672
          - 15672:15672
        options: >-
          --health-cmd "rabbitmqctl status"
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: |
          cd auth && npm ci && cd ..
          cd product && npm ci && cd ..
          cd order && npm ci && cd ..
          cd api-gateway && npm ci && cd ..

      - name: Run Docker Compose
        run: |
          docker compose up -d --build
        env:
          MONGODB_AUTH_URI: mongodb://mongo:27017/auth_db
          MONGODB_PRODUCT_URI: mongodb://mongo:27017/product_db
          MONGODB_ORDER_URI: mongodb://mongo:27017/order_db
          RABBITMQ_URL: amqp://rabbitmq:5672
          JWT_SECRET: idontknow

      - name: Wait for services to start
        run: sleep 20

      - name: Run Auth tests
        run: |
          cd auth
          npm test

      - name: Run Product tests
        run: |
          cd product
          npm test

      - name: Run Order tests
        run: |
          cd order
          npm test

      - name: Stop Docker Compose
        if: always()
        run: docker compose down --remove-orphans
