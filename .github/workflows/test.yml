name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:6
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ ping: 1 })'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      # FIX: Thêm dịch vụ RabbitMQ
      rabbitmq:
        image: rabbitmq:3.8-management-alpine # Dùng image có Management Plugin để dễ kiểm tra
        ports:
          - 5672:5672 # Cổng kết nối AMQP
          - 15672:15672 # Cổng Management UI
        options: --hostname rabbitmq # Đặt hostname để code có thể tìm thấy tên "rabbitmq"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies for all services
        run: |
          set -e
          for d in api-gateway auth product order; do
            if [ -f "$d/package.json" ]; then
              echo "Installing deps for $d"
              # Sử dụng 'npm ci' cho CI/CD để đảm bảo phiên bản chính xác
              (cd $d && npm ci)
            fi
          done

      - name: Run tests for services that have tests
        env:
          # Cấu hình MONGODB sử dụng tên service (tốt hơn 127.0.0.1)
          MONGODB_AUTH_URI: mongodb://mongodb:27017/auth_db
          # Cấu hình RabbitMQ để code của bạn kết nối đến tên service
          RABBITMQ_URI: amqp://rabbitmq
          NODE_ENV: test
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: |
          set -e
          for d in auth product; do
            if [ -f "$d/package.json" ]; then
              echo "Running tests for $d"
              # Thêm biến môi trường vào lệnh test để các services có thể đọc URI mới
              (cd $d && npm test --silent)
            fi
          done

  build-and-push:
    needs: build-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker images
        run: |
          set -e
          for d in api-gateway auth product order; do
            if [ -f "$d/Dockerfile" ]; then
              IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/$d:${{ github.sha }}
              echo "Building and pushing $IMAGE_NAME"
              docker build -t $IMAGE_NAME $d
              docker push $IMAGE_NAME
            fi
          done
