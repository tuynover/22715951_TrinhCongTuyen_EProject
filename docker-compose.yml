services:
  mongo:
    image: mongo:7
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - ecommerce
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: always

  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    container_name: 'rabbitmq'
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
     
    networks:
      - ecommerce
    restart: always   

  auth:
    build: ./auth
    ports:
      - "3000:3000"
    env_file:
      - ./auth/.env
    environment:
      - MONGO_URI=mongodb://mongo:27017/auth_db
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_started
       
    networks:
      - ecommerce
    command: sh -c "sleep 5 && node index.js"
    restart: always  

  product:
    build: ./product
    ports:
      - "3001:3001"
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_started
    env_file:
      - ./product/.env
    environment:
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - MONGO_URI=mongodb://mongo:27017/product_db
    networks:
      - ecommerce
    command: sh -c "sleep 7 && node index.js"  
    restart: always   

  order:
    build: ./order
    ports:
      - "3002:3002"
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_started
    env_file:
      - ./order/.env
    environment:
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - MONGO_URI=mongodb://mongo:27017/order_db
    networks:
      - ecommerce
    command: sh -c "sleep 10 && node index.js"  
    restart: always   

  api-gateway:
    build: ./api-gateway
    ports:
      - "3003:3003"
    depends_on:
      auth:
        condition: service_started
      product:
        condition: service_started
      order:
        condition: service_started
    networks:
      - ecommerce
    command: sh -c "sleep 10 && node index.js"  
    restart: always   

volumes:
  mongo_data:
  
networks:
  ecommerce:
